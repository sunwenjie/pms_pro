<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.asgab.repository.xmo.UserXMOMapper">
	<!--
		获取用户: 输出直接映射到对象, login_name列要"as loginName"以方便映射 ,team_id as "team.id"创建team对象并赋值
	-->
	<select id="get" parameterType="long" resultType="User">
		select u.id, u.name ,u.username as loginName,u.salt,u.useremail as email,a.name as agency,u.bu,
		(exists (select 1 from  sales_booking_production.data_sharing where user_id=u.id)) as hasSetDataShare
		from users u left join agencies a on u.agency_id =  a.id
		where  u.id=#{id} 
	</select>
	
	<select id="getUserByEmail" parameterType="String" resultType="User">
	   select id, name , username as loginName, salt, password,user_status as status, bu,
        useremail as email,
        (exists (select 1 from  sales_booking_production.data_sharing where user_id=users.id)) as hasSetDataShare
        from users where 1=1  and mail_active = '1' and user_status = 'Active'
        and useremail = #{value}
	</select>

	<!-- 查询用户,演示: 1.输入用map传入多个参数 2.<where>语句, 智能添加where和and关键字 3.输出直接映射对象 -->
	<select id="search" parameterType="map" resultType="User">
		select u.id, u.name , u.username as loginName, u.salt, u.password,u.user_status as status, u.bu,
		u.useremail as email,a.name as agency
		from users u left join agencies a on u.agency_id =  a.id
		where 1=1  and u.mail_active = '1' and u.user_status = 'Active'
		<if test="loginName != null">
			and u.username=#{loginName}
		</if>
		<if test="name != null">
			and u.name like "%"#{name}"%"
		</if>
		<if test="excludeAdmin != null">
			and u.name not like "%admin%"
		</if>
		<if test="sort != null and sort!=''">
			order by ${sort}
		</if>
	</select>
	
	
	<select id="count" parameterType="map" resultType="int">
		select count(1) 
		from users where 1=1    and mail_active = '1' and user_status = 'Active'
		<if test="loginName != null">
			and username=#{loginName}
		</if>
		<if test="name != null">
			and name like "%"#{name}"%"
		</if>
		<if test="excludeAdmin != null">
            and name not like "%admin%"
        </if>
	</select>

	<select id="findUserGroupByUserId" parameterType="map" resultType="Group">
		SELECT 
		    b.group_id AS id,
		    c.group_name AS name,
		    c.group_type AS groupType
		FROM
		    users a
		        LEFT JOIN
		    users_groups b ON a.id = b.user_id
		        LEFT JOIN
		    groups c ON c.id = b.group_id
		WHERE
		    a.id = #{userId}
	</select>
	
	<select id="findUsersByGroupName" parameterType="map" resultType="User">
		SELECT 
	    u.id,
	    u.username AS loginName,
	    u.name AS name,
	    useremail AS email
	FROM
	    users u
	        LEFT JOIN
	    users_groups ug ON u.id = ug.user_id
	        LEFT JOIN
	    groups g ON g.id = ug.group_id
	WHERE
	    g.group_name = #{group_name}
	        AND u.mail_active = '1'
	</select>
	
	<select id="findGroupByGroupName" parameterType="String" resultType="Group">
		SELECT
			id as id, group_name as name, group_type as groupType
		FROM groups 
		WHERE status = 'Active' and group_name = #{value}
	</select>
	<select id="findCanSeeGp"  resultType="Long">
		SELECT 
		    create_user
		FROM
		    sales_booking_production.permissions
		WHERE
		    node_id = 13 
		UNION ALL 
		SELECT 
		    approval_user
		FROM
		    sales_booking_production.permissions
		WHERE
		    node_id = 13
	</select>

	<select id="canSeeChannel" parameterType="map" resultType="Long">
		select approval_user from sales_booking_production.permissions p where p.node_id = 12
		and p.approval_user = #{userId}
	</select>
	
	<select id="findUsersByUserIds" parameterType="list" resultType="User">
		select u.id,u.name ,u.username as loginName, u.salt, u.password,u.user_status as status, u.bu,
        u.useremail as email,a.name as agency 
        from users u left join agencies a on u.agency_id =  a.id 
        where u.id in
		<foreach collection="list" index="index" item="id" open="(" separator="," close=")" >   
			#{id}
		</foreach>
	</select>
	
	<select id="getAllStatusUsers" parameterType="map" resultType="User">
		select id, name , username as loginName, salt, password,user_status as status, bu,
		useremail as email
		from users 
		where 1=1  and mail_active = '1' 
		<if test="name != null">
			and name like "%"#{name}"%"
		</if>
	</select>
	
	<!-- 修改最后登录时间 -->
 	<select id="update_logged" parameterType="long" resultType="int">
 		select csa_update_logged(#{id})
 	</select>
</mapper> 
